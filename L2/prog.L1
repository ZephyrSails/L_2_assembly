(:go
	(:go
		0 0
		(rdi <- 5)
		(rsi <- 7)
		(call allocate 2)
		(rdi <- rax)
		((mem rsp -8) <- :printArray_ret)
		(call :printArray 1)
		:printArray_ret
	)

	(:printArray
		1 3
		((mem rsp 0) <- r12)
		((mem rsp 8) <- r13)
		((mem rsp 16) <- r14)
		(r10 <- rdi)
		((mem rsp 0) <- r10)
		(r11 <- 0)
		((mem rsp 8) <- r11)
		(r10 <- (mem rdi 0))
		((mem rsp 16) <- r10)
		:loop
		(r10 <- (mem rsp 0))
		(rdi <- r10)
		(r11 <- (mem rsp 8))
		(rsi <- r11)
		((mem rsp -16) <- :printArrayElement_ret)
		(call :printArrayElement 2)
		:printArrayElement_ret
		(r11 <- (mem rsp 8))
		(r11++)
		(r11 <- (mem rsp 8))
		(r10 <- (mem rsp 16))
		(cjump r11 < r10 :loop :ret)
		:ret
		(return)
	)

	(:printArrayElement
		2 3
		(r10 <- rdi)
		((mem rsp 0) <- r10)
		(r10 <- rsi)
		((mem rsp 8) <- r10)
		(r10 <<= 1)
		((mem rsp 8) <- r10)
		(r10 += 1)
		((mem rsp 8) <- r10)
		(r10 <- (mem rsp 8))
		(rdi <- r10)
		(call print 1)
		(r10 <- (mem rsp 8))
		(r10 <- r10)
		((mem rsp 16) <- r10)
		(r10 >>= 1)
		((mem rsp 16) <- r10)
		(r10 *= 8)
		((mem rsp 16) <- r10)
		(r10 += 8)
		((mem rsp 16) <- r10)
		(r10 <<= 1)
		((mem rsp 16) <- r10)
		(r10 += 1)
		((mem rsp 16) <- r10)
		(r10 <- (mem rsp 16))
		(rdi <- r10)
		(call print 1)
		(r10 <- (mem rsp 16))
		(rdx <- r10)
		(rdx >>= 1)
		(r10 <- (mem rsp 0))
		(rdx += r10)
		(r10 <- (mem rdx 0))
		(r10 &= 1)
		(cjump r10 = 1 :printEle :recurseArr)
		:printEle
		(rdi <- (mem rdx 0))
		(call print 1)
		(goto :ret_printArrayElement)
		:recurseArr
		(rdi <- (mem rdx 0))
		((mem rsp -8) <- :ret_printArrayElement)
		(call :printArray 1)
		:ret_printArrayElement
		(return)
	)

)
